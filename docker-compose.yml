services:
  db:
    image: pgvector/pgvector:pg16
    container_name: sentinel_db
    env_file:
      - sentinel_backend/.env.docker
    ports:
      - "5432:5432"
    volumes:
      - sentinel_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sentinel -d sentinel_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  api_gateway:
    build:
      context: .
      dockerfile: sentinel_backend/api_gateway/Dockerfile
    container_name: sentinel_api_gateway
    env_file:
      - sentinel_backend/.env.docker
    ports:
      - "8000:8000"
    depends_on:
      - auth_service
      - spec_service
      - orchestration_service
      - data_service
      - sentinel_rust_core

  auth_service:
    build:
      context: .
      dockerfile: sentinel_backend/auth_service/Dockerfile
    container_name: sentinel_auth_service
    env_file:
      - sentinel_backend/.env.docker
    working_dir: /app
    ports:
      - "8005:8000"

  spec_service:
    build:
      context: .
      dockerfile: sentinel_backend/spec_service/Dockerfile
    container_name: sentinel_spec_service
    env_file:
      - sentinel_backend/.env.docker
    working_dir: /app
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy

  orchestration_service:
    build:
      context: .
      dockerfile: sentinel_backend/orchestration_service/Dockerfile
    container_name: sentinel_orchestration_service
    env_file:
      - sentinel_backend/.env.docker
    working_dir: /app
    ports:
      - "8002:8002"
    depends_on:
      - execution_service
      - data_service
      - sentinel_rust_core
      - message_broker

  execution_service:
    build:
      context: .
      dockerfile: sentinel_backend/execution_service/Dockerfile
    container_name: sentinel_execution_service
    env_file:
      - sentinel_backend/.env.docker
    working_dir: /app
    ports:
      - "8003:8003"
    depends_on:
      db:
        condition: service_healthy

  data_service:
    build:
      context: .
      dockerfile: sentinel_backend/data_service/Dockerfile
    container_name: sentinel_data_service
    env_file:
      - sentinel_backend/.env.docker
    working_dir: /app
    ports:
      - "8004:8004"
    depends_on:
      db:
        condition: service_healthy

  sentinel_rust_core:
    build:
      context: .
      dockerfile: sentinel_backend/sentinel_rust_core/Dockerfile
    container_name: sentinel_rust_core
    ports:
      - "8088:8088"
    environment:
      - RUST_LOG=info
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8088/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - message_broker

  message_broker:
    image: rabbitmq:3-management
    container_name: sentinel_message_broker
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    env_file:
      - sentinel_backend/.env.docker
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Observability Services
  prometheus:
    image: prom/prometheus:latest
    container_name: sentinel_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - api_gateway
      - auth_service
      - spec_service
      - orchestration_service
      - execution_service
      - data_service

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: sentinel_jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true

volumes:
  sentinel_postgres_data:
  prometheus_data:
  rabbitmq_data:
