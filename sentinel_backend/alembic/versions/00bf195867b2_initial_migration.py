"""Initial migration

Revision ID: 00bf195867b2
Revises: 
Create Date: 2025-08-08 08:37:51.893194

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '00bf195867b2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_specifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('raw_spec', sa.Text(), nullable=False),
    sa.Column('parsed_spec', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('internal_graph', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('source_url', sa.Text(), nullable=True),
    sa.Column('source_filename', sa.Text(), nullable=True),
    sa.Column('llm_readiness_score', sa.Float(), nullable=True),
    sa.Column('version', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_specifications_id'), 'api_specifications', ['id'], unique=False)
    op.create_table('test_suites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_suites_id'), 'test_suites', ['id'], unique=False)
    op.create_table('test_cases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('spec_id', sa.Integer(), nullable=False),
    sa.Column('agent_type', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('test_definition', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['spec_id'], ['api_specifications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_cases_id'), 'test_cases', ['id'], unique=False)
    op.create_table('test_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('suite_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('target_environment', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['suite_id'], ['test_suites.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_runs_id'), 'test_runs', ['id'], unique=False)
    op.create_table('test_results',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('case_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('response_code', sa.Integer(), nullable=True),
    sa.Column('response_headers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('response_body', sa.Text(), nullable=True),
    sa.Column('latency_ms', sa.Integer(), nullable=True),
    sa.Column('assertion_failures', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('executed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['case_id'], ['test_cases.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['test_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_results_id'), 'test_results', ['id'], unique=False)
    op.create_table('test_suite_entries',
    sa.Column('suite_id', sa.Integer(), nullable=False),
    sa.Column('case_id', sa.Integer(), nullable=False),
    sa.Column('execution_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['case_id'], ['test_cases.id'], ),
    sa.ForeignKeyConstraint(['suite_id'], ['test_suites.id'], ),
    sa.PrimaryKeyConstraint('suite_id', 'case_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_suite_entries')
    op.drop_index(op.f('ix_test_results_id'), table_name='test_results')
    op.drop_table('test_results')
    op.drop_index(op.f('ix_test_runs_id'), table_name='test_runs')
    op.drop_table('test_runs')
    op.drop_index(op.f('ix_test_cases_id'), table_name='test_cases')
    op.drop_table('test_cases')
    op.drop_index(op.f('ix_test_suites_id'), table_name='test_suites')
    op.drop_table('test_suites')
    op.drop_index(op.f('ix_api_specifications_id'), table_name='api_specifications')
    op.drop_table('api_specifications')
    # ### end Alembic commands ###
